<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_depthobject</parentName>
  <maskName>spr_character_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Eredito collideable da depthobject che lo eredita da solid
event_inherited();

spd = 1;

text = 0;
paused = false;
hasTorch = 0;

//la posizione del pezzo di sprite da prendere dallo sheet
x_frame = 0;
y_frame = 8;

x_offset = sprite_get_xoffset(mask_index);
y_offset = sprite_get_yoffset(mask_index);

//GENERALIZZARE GLI SPRITE PER POTERLI CAMBIARE POI
spr_shadow = spr_character_shadow;
spr_base = -1;
spr_torso = -1;
spr_jacket = -1
spr_legs = -1;
spr_hair = -1;
spr_head = -1
spr_feet = -1;


amountMoveX = 0;
amountMoveY = 0;

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
amountMoveX = 0;
amountMoveY = 0;

var idle = choose(0,1);
if(idle == 0) {
    var dir = choose(1,2,3,4);
    switch(dir) {
        case 1:
            amountMoveX = -spd;
        break;
        
        case 2:
            amountMoveX = spd;
        break;
        
        case 3:
            amountMoveY = -spd;
        break;
        
        case 4:
            amountMoveY = spd;
        break;
        
        default:break;
    }
}

alarm[0] = random_range(2.5,4) * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//COLLISION CHECK
//Horizontal
if(amountMoveX != 0) {
    var collisionH = instance_place(x + amountMoveX, y, obj_solid);
    if(collisionH != noone &amp;&amp; collisionH.collideable) {
        for(var i = 0; i &lt; abs(amountMoveX); i++) {
            if(!place_meeting(x+sign(amountMoveX), y, obj_solid)) {
                x += sign(amountMoveX);
            } else {
                break;
            }
        }
        amountMoveX = 0;
    }
}
//Vertical
if(amountMoveY != 0) {
    var collisionV = instance_place(x, y + amountMoveY, obj_solid);
    if(collisionV != noone &amp;&amp; collisionV.collideable) {
        for(var i = 0; i &lt; abs(amountMoveY); i++) {
            if(!place_meeting(x, y+sign(amountMoveY), obj_solid)) {
                y += sign(amountMoveY);
            } else {
                break;
            }
        }
        amountMoveY = 0;
    }
}

x += amountMoveX;
y += amountMoveY;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause)
    exit;

//quanto dura l'animazione del camminare
var anim_length = 9,
    frame_size = 64,
    anim_speed = 12;
    
//sto camminando verso sinistra   
if(!hasTorch) {
    if(amountMoveX &lt; 0) {
        y_frame = 9;
    } else if(amountMoveX &gt; 0) {
        y_frame = 11;
    } else if(amountMoveY &lt; 0) {
        y_frame = 8;
    } else if(amountMoveY &gt; 0) {
        y_frame = 10;
    } else {
        x_frame = 0;
    } 
} else {
    if(amountMoveX &lt; 0) {
        y_frame = 22;
    } else if(amountMoveX &gt; 0) {
        y_frame = 23;
    } else if(amountMoveY &lt; 0) {
        y_frame = 21;
    } else if(amountMoveY &gt; 0) {
        y_frame = 24;
    } else {
        x_frame = 0;
    } 
}

//VARIABILI PER DISEGNARE BENE LA COLLISION MASK
var xx = x - x_offset,
    yy = y - y_offset;

//incremento del frame per l'animazione del camminare
if(x_frame + (anim_speed/60) &lt; anim_length) {
    x_frame += anim_speed/60;
} else {
    x_frame = 1;
}

//DRAW_CHARACTER SHADOW
if(spr_shadow != -1)
    draw_sprite(spr_shadow, 0, x, y);

//DRAW CHARACTER BASE
if(spr_base != -1)
    draw_sprite_part(spr_base, 0, floor(x_frame)*frame_size, y_frame*frame_size, frame_size, frame_size, xx, yy);

//DRAW CHARACTER FEET
if(spr_feet != -1)
    draw_sprite_part(spr_feet, 0, floor(x_frame)*frame_size, y_frame*frame_size, frame_size, frame_size, xx, yy);

//DRAW CHARACTER LEGS
if(spr_legs != -1)
    draw_sprite_part(spr_legs, 0, floor(x_frame)*frame_size, y_frame*frame_size, frame_size, frame_size, xx, yy);

//DRAW CHARACTER SHIRT
if(spr_torso != -1)
    draw_sprite_part(spr_torso, 0, floor(x_frame)*frame_size, y_frame*frame_size, frame_size, frame_size, xx, yy);

//DRAW CHARACTER JACKET
if(spr_jacket != -1)
    draw_sprite_part(spr_jacket, 0, floor(x_frame)*frame_size, y_frame*frame_size, frame_size, frame_size, xx, yy);
    
//DRAW CHARACTER HAIR
if(spr_hair != -1)
    draw_sprite_part(spr_hair, 0, floor(x_frame)*frame_size, y_frame*frame_size, frame_size, frame_size, xx, yy);

//DRAW CHARACTER HEAD
if(spr_head != -1)
    draw_sprite_part(spr_head, 0, floor(x_frame)*frame_size, y_frame*frame_size, frame_size, frame_size, xx, yy);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
