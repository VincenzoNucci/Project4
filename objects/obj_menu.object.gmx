<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.pause = false;
global.view_width = view_wview[0];
global.view_height = view_hview[0];

global.key_revert = vk_escape;
global.key_enter = mb_left;

pauseSurface = 0;

//display_set_gui_size(global.view_width, global.view_height);

enum menu_page {
    main,
    settings,
    audio,
    difficulty,
    graphics,
    controls,
    height
}

enum menu_element_type {
    script_runner,
    page_transfer,
    slider,
    shift,
    toggle,
    input
}

//Crea le pagine di menu
ds_menu_main = create_menu_page(
    array_initialize_gm2("RESUME", menu_element_type.script_runner, resume_game),
    array_initialize_gm2("SETTINGS", menu_element_type.page_transfer, menu_page.settings),
    array_initialize_gm2("EXIT", menu_element_type.script_runner, exit_game)
);

ds_settings = create_menu_page(
    array_initialize_gm2("AUDIO", menu_element_type.page_transfer, menu_page.audio),
    array_initialize_gm2("DIFFICULTY", menu_element_type.page_transfer, menu_page.difficulty),
    array_initialize_gm2("GRAPHICS", menu_element_type.page_transfer, menu_page.graphics),
    array_initialize_gm2("CONTROLS", menu_element_type.page_transfer, menu_page.controls),
    array_initialize_gm2("BACK", menu_element_type.page_transfer, menu_page.main)
);

ds_menu_audio = create_menu_page(
    array_initialize_gm2("MASTER", menu_element_type.slider, change_volume, 1, array_initialize_gm2(0,1)),
    array_initialize_gm2("SOUNDS", menu_element_type.slider, change_volume, 1, array_initialize_gm2(0,1)),
    array_initialize_gm2("MUSIC", menu_element_type.slider, change_volume, 1, array_initialize_gm2(0,1)),
    array_initialize_gm2("BACK", menu_element_type.page_transfer, menu_page.settings)
);

page = 0;
menu_pages = array_initialize_gm2(ds_menu_main, ds_settings, ds_menu_audio);
menu_options = 0;

for(var i = 0; i &lt; array_length_1d(menu_pages); i++) {
    menu_options[i] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i = 0; i &lt; array_length_1d(menu_pages); i++) {
    ds_grid_destroy(menu_options[i]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(keyboard_check_pressed(vk_escape)) {
    global.pause = !global.pause;
    
    if(global.pause) {
    //crea uno snapshot dello schermo, grande quanto la view perch√®
    //disegno sullo schermo solo quello che vedo
    pauseSurface = surface_create(view_wview[0],view_hview[0]);
    surface_set_target(pauseSurface);
    //questo draw viene fatto nella surface e non nello schermo
    //draw_clear_alpha(c_black,0.5);
    with(all) {
        if(object_get_parent(id.object_index) == obj_NPC || id.object_index == obj_player) {
            //ottiene la coordinata assoluta nella surface dell'oggetto
            x -= view_xview[0];
            y -= view_yview[0];
            event_perform(ev_draw,0);
            //riposiziona l'oggetto nella posizione di origine
            x += view_xview[0];
            y += view_yview[0];   
        }
    }
    surface_reset_target();
    //DISATTIVO GLI NPC E IL PLAYER MA NON IL MOUSE
    instance_deactivate_object(obj_player);
    instance_deactivate_object(obj_NPC);
    instance_deactivate_object(obj_camera);
    //instance_deactivate_object(obj_depthobject);
    //instance_deactivate_object(obj_player);
    //instance_deactivate_object(obj_NPC);
    } else {
        if(surface_exists(pauseSurface))
            surface_free(pauseSurface);
        instance_activate_all();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i = 0; i &lt; array_length_1d(menu_pages); i++) {
    ds_grid_destroy(menu_options[i]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!global.pause) exit;
var
    gheight = display_get_gui_height(),
    gwidth = display_get_gui_width(),
    ds_grid = menu_pages[page],
    ds_height = ds_grid_height(ds_grid),
    y_buffer = 32 * 2,
    x_buffer = 16 * 2,
    start_y = (gheight / 2) - ((((ds_height - 1) / 2) * y_buffer)),
    start_x = gwidth / 2;
    
//Draw first the surface in order to draw the menu on top
//DISEGNA LE OPZIONI SE SI PREME ESC

if(surface_exists(pauseSurface)) {
    draw_surface_ext(pauseSurface,0,0,2,2,0,c_white,1);
}

//Draw pause menu back
draw_set_alpha(0.5);
draw_rectangle_colour(0,0,gwidth, gheight, c_black, c_black, c_black, c_black, false);
draw_set_alpha(1);
//Draw elements on left side
draw_set_valign(fa_middle);
draw_set_halign(fa_right);

var ltx = start_x - x_buffer, lty;
for(var j = 0; j &lt; ds_height; j++) {
    lty = start_y + (j * y_buffer);
    var c = c_white;
    if(j == menu_options[page])
        c = c_orange;
    draw_text_transformed_colour(ltx, lty, ds_grid[# 0, j], 2, 2, 0, c, c, c, c, 1);
}
//Draw dividing item
draw_line(start_x, start_y, start_x, lty);

//Draw elements on right side



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
